{"componentChunkName":"component---src-layouts-article-layout-jsx","path":"/journals/devchallenges/random-quote-generator-pt-5/","result":{"data":{"site":{"siteMetadata":{"longDescription":"Membahas programming, Tutorial Javascript, Software opensource, dan trend teknologi dan IT di Indonesia dengan santai"}},"markdownRemark":{"html":"<h1>InfoCard components</h1>\n<p>Component ini digunakan untuk menampilkan <code class=\"language-text\">quoteAuthor</code> dan <code class=\"language-text\">quoteGenre</code>, serta digunakan sebagai link ke laman quote list.</p>\n<h2>Folder structure</h2>\n<p>Buatlah file dan folder seperti berikut:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">src/\n  components/\n    InfoCard/\n      __test__/\n        index.test.ts\n      constants.ts\n      index.tsx\n      styles.css</code></pre></div>\n<p>Keterangan:</p>\n<ul>\n<li><code class=\"language-text\">InfoCard/__test__/index.test.ts</code> file unit test.</li>\n<li><code class=\"language-text\">InfoCard/constants.ts</code> adalah file yang berisikan definisi konstanta.</li>\n<li><code class=\"language-text\">InfoCard/index.tsx</code> adalah file component jsx.</li>\n<li><code class=\"language-text\">InfoCard/styles.css</code> adalah file css yang berisikan definisi style yang akan dipakai dalam component.</li>\n</ul>\n<h2>Constants</h2>\n<p>Untuk memudahkan, teks untuk beberapa kondisi diatas akan didefinisikan sebagai konstanta di file <code class=\"language-text\">constants.ts</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> constants <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  messages<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">IS_LOADING</span><span class=\"token operator\">:</span> <span class=\"token string\">'Loading contents . . .'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">AUTHOR_IS_NULL</span><span class=\"token operator\">:</span> <span class=\"token string\">'Unknown author'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">GENRE_IS_NULL</span><span class=\"token operator\">:</span> <span class=\"token string\">'Unknown genre'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> constants<span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Styles</h2>\n<h3>Menulis file css</h3>\n<p>Definisikan styles untuk component di file <code class=\"language-text\">styles.css</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.box-container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #333<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> space-between<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 50px 30px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.author</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Raleway'</span><span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 24px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 700<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-transform</span><span class=\"token punctuation\">:</span> capitalize<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.genre</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Raleway'</span><span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 400<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 8px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-transform</span><span class=\"token punctuation\">:</span> capitalize<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.right-arrow</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Raleway'</span><span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 42px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 700<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Test</h2>\n<p>Testcases yang akan diuji untuk component InfoCard adalah sebagai berikut:</p>\n<ul>\n<li>Should be render empty messages when props is <code class=\"language-text\">null</code>.</li>\n<li>Should be render loading view when loading is <code class=\"language-text\">true</code>.</li>\n<li>Should be render <code class=\"language-text\">author</code> and <code class=\"language-text\">genre</code> name correctly.</li>\n<li>Should call <code class=\"language-text\">onContainerClick</code> when infocard container clicked.</li>\n</ul>\n<p>Untuk memastikan komponen akan tampil dengan sesuai dengan cases yang ada, maka mari buat test file di <code class=\"language-text\">__test__/index.test.ts</code> yang berisikan code sebagai berikut:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> fireEvent<span class=\"token punctuation\">,</span> render<span class=\"token punctuation\">,</span> screen <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@testing-library/react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> constants <span class=\"token keyword\">from</span> <span class=\"token string\">'../constants'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> InfoCard <span class=\"token keyword\">from</span> <span class=\"token string\">'../'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'InfoCard component test cases'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Should be render empty messages when props is null'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>InfoCard <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> authorEl <span class=\"token operator\">=</span> screen<span class=\"token punctuation\">.</span><span class=\"token function\">queryByTestId</span><span class=\"token punctuation\">(</span><span class=\"token string\">'infocard-author'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> genreEl <span class=\"token operator\">=</span> screen<span class=\"token punctuation\">.</span><span class=\"token function\">queryByTestId</span><span class=\"token punctuation\">(</span><span class=\"token string\">'infocard-genre'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>authorEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeInTheDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>genreEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeInTheDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>authorEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveTextContent</span><span class=\"token punctuation\">(</span>constants<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">.</span><span class=\"token constant\">AUTHOR_IS_NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>genreEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveTextContent</span><span class=\"token punctuation\">(</span>constants<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">.</span><span class=\"token constant\">GENRE_IS_NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Should be render loading view when loading is true'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>InfoCard loading <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> loadingEl <span class=\"token operator\">=</span> screen<span class=\"token punctuation\">.</span><span class=\"token function\">queryByTestId</span><span class=\"token punctuation\">(</span><span class=\"token string\">'infocard-loading'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>loadingEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeInTheDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>loadingEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveTextContent</span><span class=\"token punctuation\">(</span>constants<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">.</span><span class=\"token constant\">IS_LOADING</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Should be render author and genre name correctly'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> quoteMock <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      author<span class=\"token operator\">:</span> <span class=\"token string\">'John Doe'</span><span class=\"token punctuation\">,</span>\n      genre<span class=\"token operator\">:</span> <span class=\"token string\">'Business'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>InfoCard author<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>quoteMock<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span> genre<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>quoteMock<span class=\"token punctuation\">.</span>genre<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> authorEl <span class=\"token operator\">=</span> screen<span class=\"token punctuation\">.</span><span class=\"token function\">queryByTestId</span><span class=\"token punctuation\">(</span><span class=\"token string\">'infocard-author'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> genreEl <span class=\"token operator\">=</span> screen<span class=\"token punctuation\">.</span><span class=\"token function\">queryByTestId</span><span class=\"token punctuation\">(</span><span class=\"token string\">'infocard-genre'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>authorEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeInTheDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>genreEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeInTheDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>authorEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveTextContent</span><span class=\"token punctuation\">(</span>quoteMock<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>genreEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveTextContent</span><span class=\"token punctuation\">(</span>quoteMock<span class=\"token punctuation\">.</span>genre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Should call onContainerClick when infocard container clicked'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> onContainerClick <span class=\"token operator\">=</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>InfoCard onContainerClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onContainerClick<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> containerEl <span class=\"token operator\">=</span> screen<span class=\"token punctuation\">.</span><span class=\"token function\">getByTestId</span><span class=\"token punctuation\">(</span><span class=\"token string\">'infocard-container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    fireEvent<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span>containerEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>onContainerClick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Component</h2>\n<p>Hasil akhir file <code class=\"language-text\">InfoCard/index.tsx</code></p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> constants <span class=\"token keyword\">from</span> <span class=\"token string\">'./constants'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./styles.css'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  author<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  genre<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  loading<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  onContainerClick<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> InfoCard<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span><span class=\"token constant\">FC</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>propTypes</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> = ({\n  author,\n  genre,\n  loading = false,\n  onContainerClick,\n}) => </span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>loading<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">data-testid</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>infocard-loading<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>constants<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">.</span><span class=\"token constant\">IS_LOADING</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n      <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>box-container<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">data-testid</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>infocard-container<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onContainerClick<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>author<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-testid</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>infocard-author<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>author <span class=\"token operator\">||</span> constants<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">.</span><span class=\"token constant\">AUTHOR_IS_NULL</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>genre<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-testid</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>infocard-genre<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>genre <span class=\"token operator\">||</span> constants<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">.</span><span class=\"token constant\">GENRE_IS_NULL</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>right-arrow<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">&amp;#8594;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token plain-text\">;\n\nexport default InfoCard;</span></code></pre></div>\n<p>jika dirasa selesai, maka ketika running test, akan menampilkan hasil seperti ini:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> PASS  src/components/InfoCard/__test__/index.test.tsx\n  InfoCard component test cases\n    ✓ Should be render empty messages when props is null (31 ms)\n    ✓ Should be render loading view when loading is true (4 ms)\n    ✓ Should be render author and genre name correctly (5 ms)\n    ✓ Should call onContainerClick when infocard container clicked (12 ms)\n\nTest Suites: 1 passed, 1 total\nTests:       4 passed, 4 total\nSnapshots:   0 total\nTime:        2.014 s\nRan all test suites related to changed files.</code></pre></div>\n<p>Untuk Pembahasan InfoCard components selesai sampai sini, jika ada pertanyaan bisa ditanyakan di twitter <a href=\"https://twitter.com/sadevva_\">@sadevva_</a></p>\n<p>Keep in touch for the updates ya!\nCheers 🥂,</p>","id":"c72ff00a-a97a-58ed-b188-09f0101df364","fields":{"slug":"/journals/devchallenges/random-quote-generator-pt-5/"},"frontmatter":{"title":"Random Quote Generator - 5","date":"2021-02-11T00:00:00.000Z","description":"Solusi dari tantangan devchallenges.io - random quote generator bagian InfoCard Component","heroImage":"https://images.unsplash.com/photo-1511465390398-532913e8328d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1490&q=80","series":"journal","photographer":"Mert Talay","unsplashAccount":"merttly"}}},"pageContext":{"slug":"/journals/devchallenges/random-quote-generator-pt-5/"}}}