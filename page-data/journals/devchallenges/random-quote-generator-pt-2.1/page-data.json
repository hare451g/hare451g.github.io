{"componentChunkName":"component---src-layouts-article-layout-jsx","path":"/journals/devchallenges/random-quote-generator-pt-2.1/","result":{"data":{"site":{"siteMetadata":{"longDescription":"Membahas programming, Tutorial Javascript, Software opensource, dan trend teknologi dan IT di Indonesia dengan santai"}},"markdownRemark":{"html":"<h2>Quote Service</h2>\n<p>Sebelum membuat tampilannya, gue akan mengurus modul webservice untuk mengatur fetching data di setiap endpoints <a href=\"https://pprathameshmore.github.io/QuoteGarden/\">Quote Garden API</a>, agar nantinya lebih mudah diolah.</p>\n<h3>Interfaces &#x26; Data Types</h3>\n<p>Hal pertama yang gue lakukan adalah, check laman dokumentasi <a href=\"https://pprathameshmore.github.io/QuoteGarden/\">Quote Garden API</a> ini</p>\n<p>Setelah membaca dokumentasi, info penting yang didapatkan adalah:</p>\n<p>Terdapat 4 buah endpoints yaitu:</p>\n<ul>\n<li>\n<p>Get random quotes</p>\n<ul>\n<li>Memiliki response berisikan <strong>list of quotes</strong></li>\n<li>URL: <code class=\"language-text\">https://quote-garden.herokuapp.com/api/v3/quotes/random</code>.</li>\n<li>tidak memiliki request parameters</li>\n</ul>\n</li>\n<li>\n<p>Get all quotes</p>\n<ul>\n<li>Memiliki response berisikan <strong>list of quotes</strong></li>\n<li>URL: <code class=\"language-text\">https://quote-garden.herokuapp.com/api/v3/quotes</code>.</li>\n<li>\n<p>Memiliki Request parameters, yang akan dibuat interface <code class=\"language-text\">IQuoteRequestParams</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IQuoteRequestParams</span> <span class=\"token punctuation\">{</span>\nauthor<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\ngenre<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\nquery<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\npage<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\nlimit<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>Keterangan:</p>\n<ul>\n<li>author: string menyatakan penulis quote</li>\n<li>genre: string menyatakan genre dari quote</li>\n<li>query: string keyword pencarian</li>\n<li>page: bilangan menyatakan target halaman</li>\n<li>limit: bilangan menyatakan batas dari quote yang diambil (default: 10)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Get all quote genres</p>\n<ul>\n<li>Memiliki response berisikan <strong>list of string</strong> yang menyatakan quote genre</li>\n<li>URL: <code class=\"language-text\">https://quote-garden.herokuapp.com/api/v3/genres</code>.</li>\n<li>tidak memiliki request parameters</li>\n</ul>\n</li>\n<li>\n<p>Get all quote authors</p>\n<ul>\n<li>Memiliki response berisikan <strong>list of string</strong> yang menyatakan quote authors</li>\n<li>URL: <code class=\"language-text\">https://quote-garden.herokuapp.com/api/v3/authors</code>.</li>\n<li>tidak memiliki request parameters</li>\n</ul>\n</li>\n</ul>\n<p>Dari keempat endpoints tadi, ada dua jenis response yang akan dihasilkan, yaitu:</p>\n<ul>\n<li>\n<p>response yang berisikan <code class=\"language-text\">list of quotes</code> sebagai di dalam field <code class=\"language-text\">data</code> yang memiliki skema object:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"_id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5eb17aaeb69dc744b4e72a4a\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"quoteText\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"The first rule of any technology used in a business is that automation applied to an efficient operation will magnify the efficiency. The second is that automation applied to an inefficient operation will magnify the inefficiency.\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"quoteAuthor\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bill Gates\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"quoteGenre\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"business\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"__v\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dapat kita definisikan type nya sebagai interface <code class=\"language-text\">IQuote</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IQuote</span> <span class=\"token punctuation\">{</span>\n_id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\nquoteText<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\nquoteAuthor<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\nquoteGenre<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n__v<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>response yang berisikan <code class=\"language-text\">array of string</code> di dalam field data.</li>\n</ul>\n<p>Untuk skema response tetap sama, yaitu:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"statusCode\"</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Quotes\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"pagination\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"currentPage\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"nextPage\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"totalPages\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"totalQuotes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token comment\">/* array of quotes / array of string*/</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Untuk challenge kali ini, yang hanya digunakan adalah response yang memiliki nilai quote pada field <code class=\"language-text\">data</code>.</p>\n<p>Berikut sedikit penjelasan tentang skema response yang dihasilkan endpoint Get all quotes dan get Random quotes</p>\n<ul>\n<li><code class=\"language-text\">statusCode</code> yang menyatakan <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\">http request status</a>.</li>\n<li><code class=\"language-text\">message</code> string berisikan pesan dari hasil request.</li>\n<li><code class=\"language-text\">totalQuotes</code> number yang menyatakan jumlah dari quotes yang ada.</li>\n<li>\n<p><code class=\"language-text\">pagination</code> object yang digunakan untuk menyimpan informasi navigasi halaman yang sedang aktif. Namun pada endpoint get random quotes, nilai semua fields yang ada adalah <code class=\"language-text\">null</code>.</p>\n<p>Dapat didefinisikan sebagai interface <code class=\"language-text\">IQuotePagination</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IQuotePagination</span> <span class=\"token punctuation\">{</span>\ncurrentPage<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\nnextPage<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\ntotalPages<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<p>Untuk skema response akan akan di definisikan sebagai interface berikut:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IQuoteResponse</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  statusCode<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  error<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  pagination<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IQuotePagination<span class=\"token punctuation\">;</span>\n  totalQuotes<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  data<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Catatan:</p>\n<ul>\n<li>T dalam interface <code class=\"language-text\">IQuoteResponse</code> digunakan untuk menampung type yang akan di inject kedalam interface. Kunjungi <a href=\"https://www.typescriptlang.org/docs/handbook/generics.html\">laman generic interface in typescript</a> untuk lebih lanjut.</li>\n</ul>\n<p>Buat alias untuk Quote response dengan menggunakan interface <code class=\"language-text\">IResponse</code> serta masukan type yang diperlukan:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> IQuoteResponse <span class=\"token operator\">=</span> IResponse<span class=\"token operator\">&lt;</span><span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>IQuote<span class=\"token operator\">>></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Hasil akhir dari file <code class=\"language-text\">interface.ts</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IQuoteRequestParams</span> <span class=\"token punctuation\">{</span>\n  author<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  genre<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  query<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  page<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  limit<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IQuotePagination</span> <span class=\"token punctuation\">{</span>\n  currentPage<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  nextPage<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  totalPages<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IQuote</span> <span class=\"token punctuation\">{</span>\n  _id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  quoteText<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  quoteAuthor<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  quoteGenre<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  __v<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IResponse</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  statusCode<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  error<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  pagination<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IQuotePagination<span class=\"token punctuation\">;</span>\n  totalQuotes<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  data<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> IQuoteResponse <span class=\"token operator\">=</span> IResponse<span class=\"token operator\">&lt;</span><span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>IQuote<span class=\"token operator\">>></span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Defining Functions</h3>\n<p>Dari keempat endpoints tadi, yang akan digunakan hanyalah 2 endpoints saja, yaitu, <code class=\"language-text\">get random quotes</code> dan <code class=\"language-text\">get all quotes</code> sesuai dengan user story yang ada.</p>\n<h4>To Fullfill - I can see a random quote &#x26; I can generate a new random quote</h4>\n<p>Gunakan endpoint <code class=\"language-text\">get random quotes</code> yang akan mengambil satu buah quote (dalam bentuk array 1 elemen).</p>\n<p>Untuk membantu proses fetching data, install package axios beserta definisi type-nya dengan perintah:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  yarn add axios\n\n  yarn add -D @types/axios</code></pre></div>\n<p>Untuk mendapatkan random quote object, function haruslah bersifat <em>asynchronous function</em> yang akan mengembalikan nilai <code class=\"language-text\">Promise</code> dengan type <code class=\"language-text\">IQuote</code> jika berhasil mengapatkan random quote dari API, atau <code class=\"language-text\">Error</code> jika gagal mengambil nilai quote, maka definisikan type dari functionnya seperti terlebih dahulu seperti berikut:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">type <span class=\"token function-variable function\">IFetchRandomQuotes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Promise<span class=\"token operator\">&lt;</span>IQuote <span class=\"token operator\">|</span> Error<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Sebelum menulis function, mari tulis terlebih dahulu test cases nya, sesuaikan dengan user story yang ada ya.</p>\n<ul>\n<li>\n<p>Should have fetched quote with correct type definition</p>\n<ul>\n<li><code class=\"language-text\">quoteAuthor</code> should be defined and should be string.</li>\n<li><code class=\"language-text\">quoteText</code> should be defined and should be string.</li>\n<li><code class=\"language-text\">quoteGenre</code> should be defined and should be string.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> fetchRandomQuotes <span class=\"token keyword\">from</span> <span class=\"token string\">'../fetchRandomQuotes'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Fetch Random Quotes'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Should have fetched quote with correct type definition'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchRandomQuotes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> quoteAuthor<span class=\"token punctuation\">,</span> quoteText<span class=\"token punctuation\">,</span> quoteGenre <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> result<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>quoteAuthor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeDefined</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> quoteAuthor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>quoteText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeDefined</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> quoteText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>quoteGenre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeDefined</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> quoteGenre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Oke test cases sudah jelas, tinggal menulis function agar pass test.</p>\n<ol>\n<li>Definisikan function sebagai async function yang akan memiliki type <code class=\"language-text\">() =&gt; Promise&lt;IQuote | Error&gt;</code>.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IQuote <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./interfaces'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token function-variable function\">fetchRandomQuotesType</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>IQuote <span class=\"token operator\">|</span> Error<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> fetchRandomQuotes<span class=\"token operator\">:</span> <span class=\"token function-variable function\">fetchRandomQuotesType</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"2\">\n<li>Gunakan <code class=\"language-text\">axios.get()</code> untuk calling api <code class=\"language-text\">https://quote-garden.herokuapp.com/api/v3/quotes/random</code> dan pastikan untuk membungkusnya dengan <code class=\"language-text\">try-catch</code>. Untuk menangani error, gunakan <code class=\"language-text\">error.message</code> sebagai return value.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IFetchRandomQuotes <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./interfaces'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token function-variable function\">fetchRandomQuotesType</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>IQuote <span class=\"token operator\">|</span> Error<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> fetchRandomQuotes<span class=\"token operator\">:</span> <span class=\"token function-variable function\">fetchRandomQuotesType</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">'https://quote-garden.herokuapp.com/api/v3/quotes/random'</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"4\">\n<li>Lakukan penegasan bila data yang akan diambil dari response body axios atau <code class=\"language-text\">response.data</code> adalah memiliki type<code class=\"language-text\">IQuoteResponse</code>.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IFetchRandomQuotes<span class=\"token punctuation\">,</span> IQuoteResponse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./interfaces'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token function-variable function\">fetchRandomQuotesType</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>IQuote <span class=\"token operator\">|</span> Error<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> fetchRandomQuotes<span class=\"token operator\">:</span> <span class=\"token function-variable function\">fetchRandomQuotesType</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">'https://quote-garden.herokuapp.com/api/v3/quotes/random'</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> quoteResponse<span class=\"token operator\">:</span> IQuoteResponse <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"4\">\n<li>Lakukan pemeriksaan apakah <code class=\"language-text\">quoteResponse</code> memiliki field <code class=\"language-text\">data</code> dan juga memiliki panjang array lebih dari 1.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IFetchRandomQuotes<span class=\"token punctuation\">,</span> IQuoteResponse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./interfaces'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token function-variable function\">fetchRandomQuotesType</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>IQuote <span class=\"token operator\">|</span> Error<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> fetchRandomQuotes<span class=\"token operator\">:</span> <span class=\"token function-variable function\">fetchRandomQuotesType</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">'https://quote-garden.herokuapp.com/api/v3/quotes/random'</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> quoteResponse<span class=\"token operator\">:</span> IQuoteResponse <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>quoteResponse<span class=\"token punctuation\">.</span>data <span class=\"token operator\">||</span> quoteResponse<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'No quotes is available'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"5\">\n<li>Return nilai quote melalui <code class=\"language-text\">quoteResponse.data[0]</code> karena response yang success seharusnya mengembalikan random quote dalam bentuk single element array.</li>\n</ol>\n<p>hasil akhir dari file <code class=\"language-text\">fetchRandomQuotes.ts</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IQuote<span class=\"token punctuation\">,</span> IQuoteResponse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./interfaces'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token function-variable function\">fetchRandomQuotesType</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>IQuote <span class=\"token operator\">|</span> Error<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> fetchRandomQuotes<span class=\"token operator\">:</span> <span class=\"token function-variable function\">fetchRandomQuotesType</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">'https://quote-garden.herokuapp.com/api/v3/quotes/random'</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> quoteResponse<span class=\"token operator\">:</span> IQuoteResponse <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>quoteResponse<span class=\"token punctuation\">.</span>data <span class=\"token operator\">||</span> quoteResponse<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'No quotes is available'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> quoteResponse<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> error<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> fetchRandomQuotes<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Sekarang lakukan test dengan perintah <code class=\"language-text\">yarn test</code>. Jika berhasil maka akan menghasilkan output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">PASS  src/lib/QuoteService/__test__/fetchRandomQuotes.test.ts\n  Fetch Random Quotes\n    ✓ Should have fetched quote with correct type definition (2985 ms)\n\nTest Suites: 1 passed, 1 total\nTests:       1 passed, 1 total\nSnapshots:   0 total\nTime:        4.884 s, estimated 5 s\nRan all test suites related to changed files.</code></pre></div>\n<h4>To Fullfill - When I select quote author, I can see a list of quotes from them.</h4>\n<p>Okey, untuk mendapatkan quotes dari penulis tertentu, kita akan menggunakan Endpoint get all quotes dengan parameter nama penulis.</p>\n<p>Sebelum menulis function, jangan lupa tulis terlebih dahulu test cases nya sesuaikan dengan user story yang ada ya.</p>\n<ul>\n<li>Should throw error 'Author is not provided' when author is null or undefined.</li>\n<li>Should throw error when no quotes available from selected author'</li>\n<li>Should fetch quotes from provided selected author.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> fetchByAuthor <span class=\"token keyword\">from</span> <span class=\"token string\">'../fetchByAuthor'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Fetch Quotes By Specific author'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should throw error when author is null or undefined'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchByAuthor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>result <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Something unexpected happening'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>result <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Author is not selected'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should throw error when no quotes available from selected author'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchByAuthor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'LoremIpsum666'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>result <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Something unexpected happening'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>result <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There's no quote from selected author\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Should fetch quotes from selected author'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> selectedAuthor <span class=\"token operator\">=</span> <span class=\"token string\">'Steve Jobs'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchByAuthor</span><span class=\"token punctuation\">(</span>selectedAuthor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Something unexpected happening'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>quoteAuthor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span>selectedAuthor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","id":"5a98cc88-0333-563d-87f7-5c88d5dd2ae6","fields":{"slug":"/journals/devchallenges/random-quote-generator-pt-2.1/"},"frontmatter":{"title":"Random Quote Generator - 2","date":"2021-02-09T00:00:00.000Z","description":"Solusi dari tantangan devchallenges.io - random quote generator bagian Quote Service, Interfaces & data types","heroImage":"https://images.unsplash.com/photo-1511465390398-532913e8328d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1490&q=80","series":"journal","photographer":"Mert Talay","unsplashAccount":"merttly"}}},"pageContext":{"slug":"/journals/devchallenges/random-quote-generator-pt-2.1/"}}}