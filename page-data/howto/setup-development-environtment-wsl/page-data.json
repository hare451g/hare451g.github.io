{"componentChunkName":"component---src-layouts-article-layout-jsx","path":"/howto/setup-development-environtment-wsl/","result":{"data":{"site":{"siteMetadata":{"longDescription":"Membahas programming, Tutorial Javascript, Software opensource, dan trend teknologi dan IT di Indonesia dengan santai"}},"markdownRemark":{"html":"<p>Minggu ini gue belajar hal baru, hal diluar kebiasaan gue, ya sekarang gue sedang menggunakan Windows 10 sebagai daily driver gue.</p>\n<h2>Windows 10?</h2>\n<p>Gue sudah menggunakan Linux sejak jaman gue kuliah, (with serious distro-hopping tho). Ngga pernah kepikiran lagi untuk menggunakan windows sebagai daily driver gue, dikarenakan gue berasa kesulitan untuk config segala kebutuhan development gue, ngga ada package manager, terminal ( cmd ) nya aneh, dan semua config biasanya based on GUI. (Iye, i tau soal <a href=\"https://chocolatey.org/\">chocolatey</a> pernah coba juga, tapi gue merasa aneh nge-gunainnya üíÄ).</p>\n<p>Karena tempat kerja gue yang sekarang memodalkan gue laptop dengan pre-installed Windows 10, dan gue malas banget install semuanya lagi, soalnya bulan ini gue beberapa kali install ulang laptop untuk menyesuaikan development environment ( tapi ya gitu bosen, oprek lagi), dan Alhamdulillah ya <a href=\"https://www.linkedin.com/company/microsoft/\">Microsoft</a> telah rilis <a href=\"https://devblogs.microsoft.com/commandline/introducing-windows-terminal/\">Windows terminal</a> dan juga <a href=\"https://docs.microsoft.com/en-us/windows/wsl/install-win10\">WSL</a>. üéâ I jadi memutuskan untuk coba WSL (dengan ubuntu 20.04) didalam windows terminal sebagai development environment.</p>\n<p><em>WSL Apasih ngab?</em> </p>\n<p>WSL / Windows Subsystem for Linux, adalah sebuah fitur di windows 10 yang memungkinan running linux shell di windows 10 tanpa perlu install linux ke disk storage. WSL itu lightweight üõ©Ô∏è dan hanya shell / terminal aja tanpa GUI.</p>\n<p><em>Masalah nggatuh bang? Lancar ngga tuh buat kerja?</em></p>\n<p>Sampai sekarang sih ngga ada masalah, bahkan gue merasa kalo WSL bener-bener melakukan kerja yang bagus untuk integrasi W10 dengan linux. Proyek <a href=\"https://storybook.js.org/\">Storybook</a> gue jalan lancar dan gue bisa ngoding langsung dengan <a href=\"https://code.visualstudio.com/\">VSCode</a> tanpa perlu config lagi. Ya walaupun begitu gue juga mengalami \"cegukan\", tapi mudah-mudahan bukan pertanda hal buruk terjadi. Tapi emang gue make nya aja yang kelewatan sih hehehe. üòÖ</p>\n<h2>Mengaktifkan WSL</h2>\n<p>Sebenernya WSL sudah ada didalam fitur windows 10, tinggal kita aktifkan aja, tapi sebelum aktifin WSL, gue kasih tau OS yang gue pake ya:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Edition:\t\tWindows 10 Home Single Language\nVersion:\t\t1909\nInstalled On:\t09/03/2020\nOS Build:\t\t18363.836</code></pre></div>\n<p>Sip, semoga di versi lain juga sama ya stepnya.</p>\n<p>Pertama, tekan start atau search keyword ini:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Windows Features</code></pre></div>\n<p>Nanti akan muncul:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Turn Windows Features On or Off</code></pre></div>\n<p>pilih opsi tersebut kemudian akan muncul dialog seperti ini:</p>\n<p><img src=\"https://res.cloudinary.com/hendrasadewa/image/upload/v1591356042/windows_features_dialog_pplt0p.png\" alt=\"cloudinary\"></p>\n<p>Cari fitur bernama <code class=\"language-text\">Windows Subsystem for Linux</code>, kemudian check fitur tersebut untuk mengaktifkannya.</p>\n<p>Atau ngga bisa dengan menggunakan command line:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</code></pre></div>\n<p>Lanjut restart pc / laptopnya.</p>\n<p>Ketika sudah menyala kembali, kuy buka Windows Store, dan  search distro linux yang disukai (Disini gue pakai Ubuntu 20.04). Kemudian install dan tunggu hingga selesai:</p>\n<p><img src=\"https://res.cloudinary.com/hendrasadewa/image/upload/v1591356425/ms_store_ubuntu_avkiwt.png\" alt=\"microsoft store, ubuntu\"></p>\n<p>Okay, untuk WSL sudah diaktifkan sekarang tinggal coba running di command prompt</p>\n<p>dengan cara running perintah <code class=\"language-text\">wsl</code>.</p>\n<p><img src=\"https://res.cloudinary.com/hendrasadewa/image/upload/v1591356591/wsl_on_cmd_znkxga.png\" alt=\"wsl di cmd\"></p>\n<p>okeh done ya, oiya tampilan terminal gue kek gitu karena udah di replace dengan <a href=\"https://en.wikipedia.org/wiki/Z_shell\">zsh</a> + <a href=\"https://ohmyz.sh/\">oh-my-zsh</a>.</p>\n<h2>Windows Terminal</h2>\n<p>Bosen kan pake cmd, sekaran windows udah punya Windows terminal, silahkan download disini <a href=\"https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701?activetab=pivot:overviewtab\">official windows terminal download in microsoft store</a>.</p>\n<p>Kalo udah, tinggal launch dan pilih drop down menu, klik console yang diinginkan:</p>\n<p><img src=\"https://res.cloudinary.com/hendrasadewa/image/upload/v1591356986/w_terminl_withh_ubuntu_lbfpac.png\" alt=\"windows terminal\"></p>\n<p>nanti akan muncul shell seperti terminal ubuntu.</p>\n<p><img src=\"https://res.cloudinary.com/hendrasadewa/image/upload/v1591357236/running_on_wsl_gyp9lv.png\" alt=\"running on w10 terminal\"></p>\n<h2>Setup Front-End (React / Node) Development Environment</h2>\n<p>Okay, lanjut di hal yang cukup menyenangkan, berikut list tools / apps yang gue butuhkan untuk development:</p>\n<ul>\n<li>Node</li>\n<li>Yarn</li>\n<li>VSCode</li>\n<li>Git (Sudah terintall)</li>\n<li>Curl (Sudah terintall)</li>\n<li>ZSH</li>\n<li>oh-my-zsh</li>\n</ul>\n<h3>Node &#x26; Yarn</h3>\n<p>Mari mulai dari node, disini gue pakai nvm, incase ada kebutuhan untuk gonta-ganti versi node, gue bisa dengan mudah ganti versi dibanding harus install ulang. Cara installnya tinggal copas perintah berikut:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span></code></pre></div>\n<p>lalu ketika selesai, reload shell dengan perintah:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">source</span> ~/.profile</code></pre></div>\n<p>lalu check installasi nvm dengan perintah:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">nvm --version</code></pre></div>\n<p>jika sudah terinstall, maka tinggal install node versi terkini dengan perintah </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">nvm <span class=\"token function\">install</span> node</code></pre></div>\n<p>lalu gunakan versi node yang terintall tadi dengan perintah</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">nvm use node</code></pre></div>\n<p>Oiya, untuk package manager, gue biasa pakai <a href=\"https://yarnpkg.com/\">yarn</a>, cara install nya tinggal running perintah:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g <span class=\"token function\">yarn</span></code></pre></div>\n<h3>VSCode</h3>\n<p>Jika sudah, mari install vscode, caranya gampang banget tinggal download dari <a href=\"https://code.visualstudio.com/\">situs official vscode</a>, terus pilih download for windows. Tungguin, sampai selesai download lalu install deh (next next next...).</p>\n<p>Kalo udah install, lanjut config dan install ekstensi vscode berikut:</p>\n<p><img src=\"https://res.cloudinary.com/hendrasadewa/image/upload/v1591358460/ext_vscode_djyt0u.png\" alt=\"extension vscode recc\"></p>\n<p>Yang perlu banget adalah: <code class=\"language-text\">Remote - WSL</code> nah ini bakalan ngemudahin waktu develop project yang disimpan dalam layer WSL. VS Intellicode juga membantu dalam coding dengan merekomendasikan command / props via AI, coding jadi lebih cepet.</p>\n<p>Lanjut ke config, tekan <code class=\"language-text\">CTRL</code>+<code class=\"language-text\">,</code> di vscode lalu pilih <code class=\"language-text\">open settings (JSON)</code>, lalu copas code berikut:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"workbench.colorTheme\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Night Owl\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"workbench.iconTheme\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"material-icon-theme\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"editor.suggestSelection\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"first\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vsintellicode.modify.editor.suggestSelection\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"automaticallyOverrodeDefaultValue\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"workbench.sideBar.location\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"right\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"editor.lineHeight\"</span><span class=\"token operator\">:</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"editor.fontSize\"</span><span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"editor.tabSize\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"editor.minimap.enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"git.autofetch\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"[json]\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"editor.defaultFormatter\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"esbenp.prettier-vscode\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Untuk colorTheme dan iconTheme bisa dipilih sesuai selera. Dikarenakan mata gue yang mulai rada burem, gue perlu menyesuaikan font sizes jadi <code class=\"language-text\">16</code> dan line height jadi <code class=\"language-text\">26</code>, dan untuk ukuran Tab gue terbiasa menggunakan <code class=\"language-text\">2</code> spaces, dan gue takeout minimap, karena gue merasa terdistraksi dengan tampilan minimap.</p>\n<h3>Zsh + Oh-My-ZSH</h3>\n<p>Untuk shell pastilah <a href=\"https://www.zsh.org/\">zsh</a>, ekstensinya banyak, dan juga lebih ringan dibanding <a href=\"https://fishshell.com/\">fish</a>. Cara installnya mulai dari install zsh dengan perintah:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">zsh</span></code></pre></div>\n<p>kemudian install <a href=\"https://ohmyz.sh/\">Oh-My-ZSH </a>dengan perintah</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sh</span> -c <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class=\"token variable\">)</span></span>\"</span></code></pre></div>\n<p>ketika installasi berjalan, akan diminta password untuk mengganti default shell (bash) dengan zsh, silahkan isikan passwordnya.</p>\n<p>setelah installasi selesai, restart windows terminal.</p>\n<h3>Config NVM di ZSH</h3>\n<p>Setelah selesai install zsh, sekarang tinggal config agar nvm dapat running di zsh.</p>\n<p>Pertama, buka file <code class=\"language-text\">~/.zshrc</code> dengan text editor yang biasa dipakai misal dengan vim:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> ~/.zshrc</code></pre></div>\n<p>kedua copy-paste perintah berikut, letakan di paling bawah dari file:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">#  NVM\nexport NVM_DIR=&quot;$HOME/.nvm&quot;\n[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm\n[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion</code></pre></div>\n<p>terakhir save (jika pakai vim bisa pakai <code class=\"language-text\">:wq</code> ) lalu reload ulang shell dengan perintah:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">source ~/.zshrc</code></pre></div>\n<p>Selamat nvm sudah dapat dijalankan!üéâ</p>\n<h2>React development</h2>\n<p>Semuanya sudah terintall, tinggal kita coba buat project starter react.</p>\n<p>Buka terminal, lalu jalankan perintah</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">npx create-react-app hello-world</code></pre></div>\n<p>tunggu hingga selesai~</p>\n<p><img src=\"https://res.cloudinary.com/hendrasadewa/image/upload/v1591360016/installing_new_react_project_dkql48.png\" alt=\"running npx create react app in wsl\"></p>\n<p>jika sudah, buka project dengan perintah</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">code hello-world</code></pre></div>\n<p>VSCode akan menginstall plugin jika pertama kali dibuka melalui wsl, lalu window vscode akan terbuka, jadi sabar ya mungkin agak lama.</p>\n<p><img src=\"https://res.cloudinary.com/hendrasadewa/image/upload/v1591360396/done_uhudnc.png\" alt=\"done\"></p>\n<p>ketika sudah masuk kedalam folder <code class=\"language-text\">hello-world</code> dengan perinah dibawah ini melalui terminal:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">cd hello-world</code></pre></div>\n<p>lalu jalankan development server dengan running perintah</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">yarn start</code></pre></div>\n<p><img src=\"https://res.cloudinary.com/hendrasadewa/image/upload/v1591360401/yarn_start_kbbpui.png\" alt=\"project started\"></p>\n<p>Check browser dengan alamat yang tertera<code class=\"language-text\">localhost:3000</code>. Nanti akan muncul tampilan berikut:</p>\n<p><img src=\"https://res.cloudinary.com/hendrasadewa/image/upload/v1591360395/running_on_browser_cb5fkz.png\" alt=\"react running in browser\"></p>\n<p>Yeeay, sudah complete, happy hacking folks! üë®‚Äçüíªüë©‚Äçüíª</p>","id":"dbc5479d-2b9d-5777-b412-c684ab65c3a0","fields":{"slug":"/howto/setup-development-environtment-wsl/"},"frontmatter":{"title":"Setup Development Environment di WSL","date":"2020-06-05T00:00:00.000Z","description":"Pindah ke Windows, tapi biasa pake ubuntu? Coba baca ini deh biar bisa running ubuntu di Windows tanpa VM atau docker.","heroImage":"https://images.unsplash.com/photo-1522199755839-a2bacb67c546?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1352&q=80","series":"howto","photographer":"Anete L≈´si≈Üa","unsplashAccount":"anete_lusina"}}},"pageContext":{"slug":"/howto/setup-development-environtment-wsl/"}}}