{"componentChunkName":"component---src-layouts-article-layout-jsx","path":"/js101/functions/3-callback/","result":{"data":{"site":{"siteMetadata":{"longDescription":"Membahas programming, Tutorial Javascript, Software opensource, dan trend teknologi dan IT di Indonesia dengan santai"}},"markdownRemark":{"html":"<p>Fungsi dalam javascript dianggap sebagai object, oleh karena itu fungsi dapat memungkinkan untuk passing fungsi sebagai parameter fungsi. Fungsi yang di-passing kedalam argumen fungsi disebut dengan <em>Callback Function</em>. Tujuannya adalah untuk mengatur kapan fungsi ini dipanggil atau di-<em>callback</em>.</p>\n<p><img src=\"https://media.giphy.com/media/10HHiQbUEcOMr6/giphy.gif\"></p>\n<p>Sedikit bikin bingung ya, mari kita (HAAAA? QYTAA!?) check contoh berikut:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">greetMe</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback<span class=\"token punctuation\">,</span> name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Welcome back'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">greetMe</span><span class=\"token punctuation\">(</span>greeting<span class=\"token punctuation\">,</span> <span class=\"token string\">'Hendra'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Dari contoh diatas, function <code class=\"language-text\">greeting</code> akan dipanggil di dalam function <code class=\"language-text\">greetMe</code>.</p>\n<p>Tujuannya apa ya, bukannya lebih ribet gan? Nah, tujuannya agar fungsi yang di passing lewat argumen / <em>callback function</em> dapat diatur pemanggilannya.</p>\n<p>Mari kita coba solve kasus ini:</p>\n<p><strong>Buatlah fungsi countdown yang akan menghitung mundur dari sekian detik, kemudian jika waktu habis tampilkan message \"Waktu habis\", jika waktu belum habis, tampilkan siswa waktu dalam detik.</strong></p>\n<p>Untuk membuat countdown, kita butuh interval, tujuannya untuk mengulang suatu statement dengan delay sekian detik.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">,</span> delayTimeInMs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>SetInterval memiliki dua buah parameter yaitu:</p>\n<ul>\n<li><code class=\"language-text\">callback</code>: function yang harus dijalankan selama interval berlangsung.</li>\n<li><code class=\"language-text\">delayTimeInMs</code>: jumlah waktu delay setiap interval dalam satuan milidetik.</li>\n</ul>\n<p>Ok, sekarang mari buat function countdown. Jika dipahami melalui deskripsi kasus spesifikasi dari fungsi countdown adalah:</p>\n<ul>\n<li>\n<p>memiliki parameter:</p>\n<ul>\n<li><code class=\"language-text\">count</code>: bilangan yang akan menjadi acuan untuk menghitung mundur.</li>\n<li><code class=\"language-text\">message</code>: pesan yang akan ditampilkan ketika waktu habis.</li>\n</ul>\n</li>\n<li>\n<p>memiliki body function berisi statement:</p>\n<ul>\n<li>definisikan interval yang akan mengurangi nilai <code class=\"language-text\">count</code> setiap interval terjadi.</li>\n<li>pada setiap interval, check apakah nilai <code class=\"language-text\">count</code> sudah habis.</li>\n<li>jika sudah habis, akan mencetak <code class=\"language-text\">message</code>.</li>\n<li>jika belum habis tampilkan siswa waktu.</li>\n</ul>\n</li>\n<li>\n<p>memiliki definisi konstanta:</p>\n<ul>\n<li><code class=\"language-text\">delay = 1000</code>: 1000 didapat dari konversi milidetik ke detik (1 detik = 1000 milidetik).</li>\n</ul>\n</li>\n</ul>\n<p>Solusi dalam code:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">countDown</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">count <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> delay <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> interval <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>onTimeInterval<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">onTimeInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    count<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">countDown</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Waktu habis'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>perhatikan pada bagian:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>onTimeInterval<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>terdapat <em>passing</em> fungsi <code class=\"language-text\">onTimeInterval</code> kedalam <code class=\"language-text\">setInterval</code>, yang nantinya akan dijalankan ketika interval terjadi.</p>\n<p>Jika di run, program akan menghasilkan output seperti ini:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">9</span>\n<span class=\"token number\">8</span>\n<span class=\"token number\">7</span>\n<span class=\"token number\">6</span>\n<span class=\"token number\">5</span>\n<span class=\"token number\">4</span>\n<span class=\"token number\">3</span>\n<span class=\"token number\">2</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">0</span>\nWaktu habis</code></pre></div>\n<p>Kasus sudah solved dengan program yang telah dibuat.</p>\n<p>but wait,</p>\n<p><img src=\"https://media.giphy.com/media/3o7btZ1Gm7ZL25pLMs/giphy.gif\"></p>\n<p><strong>Q</strong>: Hmm, kenapa ngga <code class=\"language-text\">console.log()</code> aja bang setelah panggil countdown? kek gini ni misalnya:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">countDown</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">count</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> delay <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> interval <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>onTimeInterval<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">onTimeInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    count<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">countDown</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Waktu habis'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Q</strong>: Bukannya bakalan <em>nyetak</em> message, setelah countdown-nya selesai?</p>\n<p><strong>A</strong>: Ngga bisa gan, hasilnya bakalan jadi seperti ini:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Waktu habis\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0</code></pre></div>\n<p><strong>Q</strong>: haaaa?</p>\n<p><img src=\"https://media.giphy.com/media/2XskdWuNUyqElkKe4bm/giphy.gif\"></p>\n<p><strong>A</strong>: Teks \"Waktu habis\" akan di cetak duluan dikarenakan proses setInterval yang akan dijalankan secara <em>asynchronous</em>, artinya kode akan dieksekusi tanpa menunggu proses sebelumnya selesai. Oleh karena itu js akan melanjutkan ke statement <code class=\"language-text\">console.log</code> yang terletak setelah pemanggilan function <code class=\"language-text\">countdown</code>. Oleh karena itu kita dapat menggunakan callback untuk mengatur agar statement untuk mencetak <code class=\"language-text\">&quot;Waktu habis&quot;</code> dipanggil setelah waktu nya habis.</p>\n<p>Okay, untuk callback sepertinya sampai sini dulu, kita akan bahas implementasi callback lebih lengkap dalam section array dan juga asynchronous.</p>\n<p>thanks for your time and cheers 🥂</p>","id":"728c8363-a855-523a-93da-30c1eecb1bdd","fields":{"slug":"/js101/functions/3-callback/"},"frontmatter":{"title":"Callback function","date":"2020-05-16T00:00:00.000Z","description":"Ya fungsi yang di pass ke fungsi lain yang nantinya akan dipanggil dalam fungsi nya~ pusing kan~","heroImage":"https://images.unsplash.com/uploads/1413222992504f1b734a6/1928e537?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80","series":"js101","photographer":"Pavan Trikutam","unsplashAccount":"ptrikutam"}}},"pageContext":{"slug":"/js101/functions/3-callback/"}}}