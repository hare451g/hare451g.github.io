{"componentChunkName":"component---src-layouts-article-layout-jsx","path":"/js101/operators/3-comparison-operators/","result":{"data":{"site":{"siteMetadata":{"longDescription":"Membahas programming, Tutorial Javascript, Software opensource, dan trend teknologi dan IT di Indonesia dengan santai"}},"markdownRemark":{"html":"<h1>Operator persamaan ( == / === )</h1>\n<p>Di js, untuk membandingkan nilai antara dua buah primitive atau variabel dapat dilakukan dengan menggunakan operator persamaan. Operator persmaan dalam javascript terbagi menjadi dua, yaitu persamaan berdasarkan nilai atau <em>equality</em> (==), dan persamaan berdasarkan nilai dan tipe nya atau <em>strict equality</em> (===).</p>\n<p>Contoh penggunaan:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">===</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<p>Perlu diperhatikan saat membandingkan nilai dengan operator persamaan, jika ekspektasi dari nilai yang akan dibandingkan adalah sama dan tipenya pun juga sama, gunakanlah selalu operator persamaan <em>strict equality</em>, karena selain membandingkan nilai, tipe nya pun akan dicheck, contoh pada <code class=\"language-text\">1 === &#39;1&#39;</code> akan menghasilkan <code class=\"language-text\">false</code>, karena nilainya benar sama, namun tipenya berbeda, yaitu <code class=\"language-text\">number</code> dan <code class=\"language-text\">string</code>.</p>\n<h1>Operator pertidaksamaan ( != / !== )</h1>\n<p>Selain persamaan, terdapat juga operator untuk check pertidaksamaan antar nilai atau variabel, sama dengan operator persamaan, operator ini pun juga memiliki <em>strict inequality</em> operator dengan menggunakan (<code class=\"language-text\">!==</code>).</p>\n<p>Contoh penggunaan:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<h1>Operator relasional ( > , &#x3C;, >=, &#x3C;= )</h1>\n<p>Operator ini digunakan untuk membandingkan dua nilai numerik.</p>\n<p>Terdiri dari beberapa operator:</p>\n<table>\n<thead>\n<tr>\n<th>Symbol</th>\n<th>Deskripsi</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>></td>\n<td>lebih dari</td>\n</tr>\n<tr>\n<td>&#x3C;</td>\n<td>kurang dari</td>\n</tr>\n<tr>\n<td>>=</td>\n<td>lebih dari atau sama dengan</td>\n</tr>\n<tr>\n<td>&#x3C;=</td>\n<td>kurang dari atau sama dengan</td>\n</tr>\n</tbody>\n</table>\n<p>Contoh Penggunaan:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">1</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token number\">1</span> <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">>=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>Dalam operator relational, hanya nilai saja yang dibandingkan, tak ada operator <em>strict</em> yang dapat membandingkan nilai dan tipe.</p>\n<h1>Special Case, Null &#x26; Undefined</h1>\n<p>Membandingkan <code class=\"language-text\">null</code> dan <code class=\"language-text\">undefined</code> dengan operator persamaan.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">null</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token keyword\">null</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<p>Terdapat aturan khusus dimana kedua nilai yang bersifat <em>falsy</em> ini jika dibandingkan dengan persamaan <em>non strict equality</em> akan bernilai true, sementara dengan operator <em>strict equality</em> akan bersifat false, karena null dan undefined memiliki tipe yang berbeda.</p>\n<p>Membandingkan <code class=\"language-text\">null</code> dengan nilai 0 menggunakan operator relational.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">null</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token keyword\">null</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">null</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token keyword\">null</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>Ketika terdapat operator relational, <code class=\"language-text\">null</code> akan dikonversi kedalam nilai numerik, yaitu 0, berikut adalah code untuk membuktikannya:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">null</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">null</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">null</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">null</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>Membandingkan <code class=\"language-text\">undefined</code> dengan nilai 0 menggunakan operator relational.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">undefined</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token keyword\">undefined</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token keyword\">undefined</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token keyword\">undefined</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<p>Berbeda dengan <code class=\"language-text\">null</code>, <code class=\"language-text\">undefined</code> akan dikonversikan kedalam <code class=\"language-text\">NaN</code>, nilai <code class=\"language-text\">NaN</code> akan selalu menghasilkan <code class=\"language-text\">false</code> jika di bandingkan dengan bilangan lain. sehingga akan selalu menghasilkan nilai <code class=\"language-text\">false</code> seperti kode diatas.</p>\n<h1>Weird Case 0.1 + 0.2 === 0.3 returns false!</h1>\n<p>Kasus ini banyak terjadi, cukup aneh memang, penjelasan singkat mengapa kode <code class=\"language-text\">0.1 + 0.2 === 0.3</code> menghasilkan <code class=\"language-text\">false</code> karena <code class=\"language-text\">0.1 + 0.2</code> tidak akan menghasilkan bilangan <code class=\"language-text\">0.3</code> melainkan bilangan <code class=\"language-text\">0.30000000000000004</code>. Ini terjadi karena javascript selalu menyimpan data numerik dengan tipe data double precision float. Penjelasan lengkap dapat di lihat di <a href=\"https://medium.com/better-programming/why-is-0-1-0-2-not-equal-to-0-3-in-most-programming-languages-99432310d476\">artikel medium ini</a>.</p>\n<p>Okay, sekarang sudah siap untuk bikin kondisi buat branching dan looping nih,</p>\n<p>Cheers 🥂</p>","id":"61a3c08e-9388-5ea2-9664-fa2f6e49a70b","fields":{"slug":"/js101/operators/3-comparison-operators/"},"frontmatter":{"title":"Operator perbandingan di Javascript","date":"2020-04-10T00:00:00.000Z","description":"Cocoklah untuk yang bingung dengan penggunaan statement yang butuh kondisi seperti looping, dan branching.","heroImage":"https://images.unsplash.com/photo-1560864495-a6bd2a912ca7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1258&q=80","series":"js101","photographer":"Coffee Geek","unsplashAccount":"coffeegeek"}}},"pageContext":{"slug":"/js101/operators/3-comparison-operators/"}}}