{"componentChunkName":"component---src-layouts-article-layout-jsx","path":"/js101/introduction/1-variables-constants/","result":{"data":{"site":{"siteMetadata":{"longDescription":"Membahas programming, Tutorial Javascript, Software opensource, dan trend teknologi dan IT di Indonesia dengan santai"}},"markdownRemark":{"html":"<p>Dalam pemrograman, sering kali program harus dapat menyimpan nilai sementara, baik nilai dari suatu operasi, ataupun nilai konstan yang akan digunakan kembali. Nilai sementara yang disimpan dapat diberi nama untuk mewakili nilainya, tujuannya adalah agar dapat mudah memanggil kembali nilai yang telah disimpan, Nilai sementara yang diberi nama dapat disebut juga dengan <code class=\"language-text\">Variabel</code>.</p>\n<h2>Variabel</h2>\n<p>Variabel adalah 'wadah' untuk nilai yang dapat diganti dengan nilai baru. Variabel dapat digunakan untuk menyipan nilai nilai primitif (bilangan bulat, text / string) ataupun non-primitif seperti array dan function. Untuk membuat variabel dapat menggunakan keyword <code class=\"language-text\">var</code>. Untuk memahami lebih lanjut, mari kita (HAH~!? KITA?) gunakan contoh berikut:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Hendra Sadewa'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hendra Sadewa</span>\n\nname <span class=\"token operator\">=</span> <span class=\"token string\">'hare'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// hare</span></code></pre></div>\n<p>Jika code diatas dijalankan akan menghasilkan output seperti ini:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Hendra Sadewa\nhare</code></pre></div>\n<p>Dari contoh diatas terlihat nilai dari Variabel <code class=\"language-text\">name</code> dapat diubah dengan cara melakukan re-assign nilai <code class=\"language-text\">name = &#39;hare&#39;</code>.</p>\n<h2>Constants</h2>\n<p>Mirip seperti Variabel biasa, namun nilai dari constants tak dapat di re-assign. Bila dipaksa untuk di re-assign, maka akan menimbulkan error. Untuk menggunakan constants cukup definisikan Variabelnya dengan keyword <code class=\"language-text\">const</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Hendra Sadewa'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nname <span class=\"token operator\">=</span> <span class=\"token string\">'hare'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// error</span></code></pre></div>\n<p>Jika code diatas dijalankan, output seperti ini:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Hendra Sadewa\nUncaught TypeError: Assignment to constant Variable.\n  at <span class=\"token operator\">&lt;</span>anonymous<span class=\"token operator\">></span>:3:6</code></pre></div>\n<p>Error yang terjadi adalah <code class=\"language-text\">TypeError</code> dan menyatakan adanya <code class=\"language-text\">Assignment to constant Variable.</code>, tepat seperti sifat constants yang tak dapat diganti nilainya dengan nilai yang baru.</p>\n<h2>Beberapa Hal yang Perlu diperhatikan dalam Penggunaan Variable</h2>\n<p>Dalam penamaan variable, sebisa mungkin dapat mewakili nilai yang disimpan. Bila nilai dalam variable tak perlu untuk diubah, gunakanlah <code class=\"language-text\">const</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> userName <span class=\"token operator\">=</span> <span class=\"token string\">'hendrasadewa'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> <span class=\"token number\">161</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> heightCategory <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>height <span class=\"token operator\">></span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  heightCategory <span class=\"token operator\">=</span> <span class=\"token string\">'Tall'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>height <span class=\"token operator\">></span> <span class=\"token number\">160</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  heightCategory <span class=\"token operator\">=</span> <span class=\"token string\">'average'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>height <span class=\"token operator\">&lt;</span> <span class=\"token number\">160</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  heightCategory <span class=\"token operator\">=</span> <span class=\"token string\">'short'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  username <span class=\"token operator\">+</span>\n    <span class=\"token string\">' termasuk dalam kategori '</span> <span class=\"token operator\">+</span>\n    heightCategory <span class=\"token operator\">+</span>\n    <span class=\"token string\">' karena memiliki tinggi'</span> <span class=\"token operator\">+</span>\n    height <span class=\"token operator\">+</span>\n    <span class=\"token string\">'cm'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Dari potongan program diatas jika di running akan menghasilkan output:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">hendrasadewa termasuk dalam kategori average karena memiliki tinggi 161cm</code></pre></div>\n<p>Dapat diperhatikan bila penggunaan variable dengan nama yang sesuai dengan nilainya memudahkan programmer lain untuk memahami source code, karena dapat mengetahui secara langsung nilai apa yang disimpan. Penggunaan constant pun tepat karena nilai <code class=\"language-text\">username</code> dan nilai dari <code class=\"language-text\">height</code> tak akan di assign ulang seperti nilai <code class=\"language-text\">heightCategory</code> yang akan berubah sesuai dengan kondisi dari variabel <code class=\"language-text\">height</code>.</p>\n<p>Mohon hindari lah contoh yang tidak baik seperti ini:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> userName <span class=\"token operator\">=</span> <span class=\"token string\">'hendrasadewa'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> h <span class=\"token operator\">=</span> <span class=\"token number\">161</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>height <span class=\"token operator\">></span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  c <span class=\"token operator\">=</span> <span class=\"token string\">'Tall'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>height <span class=\"token operator\">></span> <span class=\"token number\">160</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  c <span class=\"token operator\">=</span> <span class=\"token string\">'average'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>height <span class=\"token operator\">&lt;</span> <span class=\"token number\">160</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  c <span class=\"token operator\">=</span> <span class=\"token string\">'short'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  username <span class=\"token operator\">+</span>\n    <span class=\"token string\">' termasuk dalam kategori '</span> <span class=\"token operator\">+</span>\n    c <span class=\"token operator\">+</span>\n    <span class=\"token string\">' karena memiliki tinggi'</span> <span class=\"token operator\">+</span>\n    h <span class=\"token operator\">+</span>\n    <span class=\"token string\">'cm'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Dalam contoh yang kurang baik ini akan menimbulkan <del>perpecahan antar ummat</del> kebingungan karena nama dari variabel yang hanya menggunakan huruf tak dapat mewakili arti dari nilai yang disimpan.</p>\n<p>Oiya, ada hal yang perlu diingat, bahwa nilai yang disimpan dalam variable tak dapat disimpan secara permanent (persist) karena hanya disimpan dalam runtime atau saat program dijalankan.</p>\n<p>Okey, pembahasan untuk variabel dan konstanta sampai disini dulu, semoga dapat membantu dan dimengerti. Bila bingung atau menemukan kesalahan dalam artikel ini, silahkan mention gue di twitter <a href=\"https://twitter.com/sadevva_\">@sadevva_</a>.</p>\n<p>Cheers 🥂</p>","id":"3f34e757-455b-5870-a911-81789d0130ac","fields":{"slug":"/js101/introduction/1-variables-constants/"},"frontmatter":{"title":"Variabel dan konstanta di Javascript","date":"2020-03-20T00:00:00.000Z","description":"Mencoba mengenal, memahami dan menggunakan variabel dan konstanta dalam javascript.","heroImage":"https://images.unsplash.com/photo-1527931372109-865f33dff725?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1351&q=80","series":"js101","photographer":"s2 art","unsplashAccount":"s2artz"}}},"pageContext":{"slug":"/js101/introduction/1-variables-constants/"}}}